<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<packaging>pom</packaging>

	<groupId>com.easy.framework</groupId>
	<artifactId>easy-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>easy-parent</name>
	<description>
		easy框架父pom, 在spring-boot-dependencies基础上, 增加常用util、三方组件、框架包等,
		业务系统只需继承该pom, 即可免于绝大部分jar包的版本管理; 业务系统的包版本需要升级时, 仅需
		升级该父pom,而无需每个业务系统都进行升级.
	</description>
	<url>https://github.com/xiongzhao1217/easy-framework-parent</url>

	<issueManagement>
		<system>github Issue</system>
		<url>https://github.com/xiongzhao1217/easy-framework-parent/issues</url>
	</issueManagement>

	<developers>
		<developer>
			<name>xiongzhao</name>
			<email>xiongzhao1217@163.com</email>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>utf-8</project.reporting.outputEncoding>
		<compile.version>8</compile.version>
		<java.version>1.8</java.version>

		<!-- 公司中间件版本 -->


		<!-- easy框架版本 -->
		<easy-core.version>1.0.0-SNAPSHOT</easy-core.version>


		<!-- 工具库依赖包版本 -->
		<commons-lang3.version>3.9</commons-lang3.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<guava.version>28.0-jre</guava.version>
		<guava-retry.version>2.0.0</guava-retry.version>
		<hutool.version>5.0.3</hutool.version>
		<commons-fileupload.version>1.3.3</commons-fileupload.version>
		<lombok.version>1.18.10</lombok.version>

		<!-- 三方组件库版本 -->
		<fastjson.version>1.2.70</fastjson.version>
		<pagehelper.version>5.1.10</pagehelper.version>
		<pagehelper.springboot.version>1.2.12</pagehelper.springboot.version>
		<druid.version>1.1.20</druid.version>
		<mybatis-plus.version>3.2.0</mybatis-plus.version>
		<mybatis-plus-boot.version>3.2.0</mybatis-plus-boot.version>

		<!-- 框架依赖包版本 -->
		<spring-boot.version>2.1.5.RELEASE</spring-boot.version>
		<velocity.version>1.7</velocity.version>
		<freemarker.version>2.3.29</freemarker.version>
		<mysql.version>5.1.30</mysql.version>
		<mybatis.version>3.5.2</mybatis.version>
		<mybatis-typehandlers-jsr310.version>1.0.2</mybatis-typehandlers-jsr310.version>
		<mybatis-spring-boot.version>2.1.0</mybatis-spring-boot.version>
		<slf4j.version>1.7.25</slf4j.version>
		<log4j2.version>2.12.1</log4j2.version>
		<disruptor.version>3.4.2</disruptor.version>

		<!-- maven插件版本 -->
		<maven-archetype-plugin.version>3.0.1</maven-archetype-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>2.4.3</maven-resources-plugin.version>
		<versions-maven-plugin.version>2.7</versions-maven-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- spring boot 依赖，包含spring核心包spring-framework-pom以及三方依赖 -->
			<!-- 必须放在最前面，type都是pom的放在前面的优先级更高 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- 排除springboot默认的日志包 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>


			<!-- 公司中间件 begin -->


			<!-- 公司中间件 end -->


			<!-- easy框架 begin -->
			<!-- easy框架核心包 -->
			<dependency>
				<groupId>com.easy.framework</groupId>
				<artifactId>easy-core</artifactId>
				<version>${easy-core.version}</version>
			</dependency>
			<!-- easy框架excel工具包 -->
			<dependency>
				<groupId>com.easy.framework</groupId>
				<artifactId>easy-excel</artifactId>
				<version>${easy-core.version}</version>
			</dependency>
			<!-- easy框架 end -->


			<!-- 工具库依赖包 begin -->
			<!-- apache工具包 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<!-- apache 集合工具类 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<!-- google guava -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<!-- guava重试组件 -->
			<dependency>
				<groupId>com.github.rholder</groupId>
				<artifactId>guava-retrying</artifactId>
				<version>${guava-retry.version}</version>
			</dependency>
			<!-- 核心，包括Bean操作、日期、各种Util等 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-core</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!-- 加密解密模块，提供对称、非对称和摘要算法封装 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-crypto</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!-- 扩展模块，对第三方封装（模板引擎、邮件、Servlet、二维码、Emoji、FTP、分词等） -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-extra</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!-- 基于HttpUrlConnection的Http客户端封装 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-http</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!-- 系统参数调用封装（JVM信息等） -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-system</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!-- 图片验证码实现 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-captcha</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!-- 针对POI中Excel的封装 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-poi</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!-- apache上传组件 -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
			</dependency>
			<!-- lombok -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<!-- 工具库依赖包 end -->


			<!-- 三方组件库 begin -->
			<!-- fastjson -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!-- page helper分页 -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper</artifactId>
				<version>${pagehelper.version}</version>
			</dependency>
			<!-- page helper分页 spring boot -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper.springboot.version}</version>
			</dependency>
			<!-- druid数据库连接池 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<!-- mybatis plus -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
			<!-- mybatis plus 代码生成器 -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-generator</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
			<!-- mybatis-plus-spring-boot -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus-boot.version}</version>
			</dependency>
			<!-- 三方组件库 end -->


			<!-- 框架依赖包 begin -->
			<!-- velocity模板 -->
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>${velocity.version}</version>
			</dependency>
			<!-- freemarker模板 -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
			<!-- mysql -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!-- mybatis 版本必须与mybatis-plus依赖的版本一致 -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<!--mybatis 字段映射-->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-typehandlers-jsr310</artifactId>
				<version>${mybatis-typehandlers-jsr310.version}</version>
			</dependency>
			<!-- mybatis-spring-boot -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot.version}</version>
			</dependency>
			<!-- log4j2、slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j2.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j2.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-web</artifactId>
				<version>${log4j2.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>${log4j2.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- log4j2异步记录日志用到 -->
			<dependency>
				<groupId>com.lmax</groupId>
				<artifactId>disruptor</artifactId>
				<version>${disruptor.version}</version>
			</dependency>
			<!-- 框架依赖包 end -->
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- maven编译插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${compile.version}</source>
						<target>${compile.version}</target>
						<encoding>utf-8</encoding>
					</configuration>
				</plugin>
				<!-- maven脚手架插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>${maven-archetype-plugin.version}</version>
				</plugin>
				<!-- spring-boot-maven插件 -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>
				<!-- 源码发布插件 -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- 一键更新版本，mvn versions:set -DnewVersion=1.1.0-SNAPSHOT -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<!-- 这里的id必须要和全局配置中的release id 一致 -->
			<id>sonatype_releases</id>
			<name>Nexus Release Repository</name>
			<!-- https://issues.sonatype.org创建issue成功后，对方回复的release发布地址-->
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
		<snapshotRepository>
			<!-- 这里的id必须要和全局配置中的snapshot id 一致 -->
			<id>sonatype_snapshots</id>
			<name>Nexus Snapshot Repository</name>
			<!-- https://issues.sonatype.org创建issue成功后，对方回复的snapshot发布地址-->
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>

